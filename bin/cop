#!/usr/bin/env python3
import os
import subprocess
import sys
import time
import tempfile
from subprocess import Popen
import tty
import termios

def print_green(text: str):
    GREEN = '\033[92m'
    RESET = '\033[0m'
    print(f"{GREEN}{text}{RESET}")

def get_char() -> str:
    fd = sys.stdin.fileno()
    old_settings = termios.tcgetattr(fd)
    try:
        tty.setraw(fd)
        ch = sys.stdin.read(1)
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
    return ch

def parse_and_execute(output: str):
    lines = output.split("\n")
    def find_line(search):
        for i, line in enumerate(lines):
            if search in line:
                return i
        return -1

    suggestion_line_index = find_line("# Suggestion:")
    end_line_index = find_line("Select an option  [Use arrows to move, type to filter]")
    if suggestion_line_index == -1 or end_line_index == -1:
        print("Invalid output format")
        print(output)
        sys.exit(1)
    execute_command(' '.join(lines[suggestion_line_index + 1 : end_line_index - 1]))


def execute_command(suggestion: str):
    suggestion = suggestion.strip()
    print_green(suggestion)
    print("Run this command? (E to open in editor) [Y/n/e]: ", end="", flush=True)

    c = get_char()
    if c in ['y', 'Y', '\n', '\r']:
        print("[Running...]")
        result = subprocess.run(suggestion, shell=True, executable='bash', check=False)
        sys.exit(result.returncode)

    elif c in ['e', 'E']:
        with tempfile.NamedTemporaryFile(delete=False) as tmp:
            with open(tmp.name, 'w', encoding='utf-8') as file:
                file.write(suggestion)
            subprocess.run(["nano", tmp.name], check=True)
            with open(tmp.name, 'r', encoding='utf-8') as file:
                suggestion = file.read()
            print("\nEdited command:")
            execute_command(suggestion)

    else:
        print("\nCanceled by user")
        sys.exit(1)


# Get the command line arguments, excluding the script name
args = sys.argv[1:]
command = ['gh', 'copilot', 'suggest', '-t', 'shell', ' '.join(args)]

# Create a temporary file
with tempfile.NamedTemporaryFile(delete=False) as tmp:
    tmp_file = tmp.name

# Redirect the output of the command to the temporary file
with open(tmp_file, 'w', encoding='utf-8') as file:
    process = Popen(command, stdout=file, stderr=file, stdin=subprocess.PIPE)

print("Generating", end="", flush=True)
while True:
    with open(tmp_file, 'r', encoding='utf-8') as file:
        output = file.read()
    if "Use arrows to move, type to filter" in output:
        print()
        os.remove(tmp_file)
        parse_and_execute(output)
        sys.exit(0)
    elif "Suggestion not readily available" in output:
        print()
        os.remove(tmp_file)
        print("No suggestions found")
        sys.exit(1)
    else:
        print(".", end="", flush=True)
        time.sleep(0.5)
